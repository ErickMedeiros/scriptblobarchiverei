# Vari√°veis de Ambiente
$resourceGroup = "RG-Arquivos"
$storageAccount = "nomedostorage"
$data = Get-Date -Format "yyyyMMdd-HHmmss"
$logFile = "C:\Temp\Reidratacao-Log-$data.csv"

# Verifica se a pasta de log existe, se n√£o cria
if (!(Test-Path -Path "C:\Temp")) {
    New-Item -ItemType Directory -Path "C:\Temp"
}

# Login no Azure (se ainda n√£o)
Connect-AzAccount

# Obter Contexto do Storage Account
$ctx = (Get-AzStorageAccount -ResourceGroupName $resourceGroup -Name $storageAccount).Context

# Obter todos os containers no Storage Account
$containers = Get-AzStorageContainer -Context $ctx

# Lista para gerar log
$log = @()

foreach ($container in $containers) {
    Write-Host "üîç Processando Container: $($container.Name)" -ForegroundColor Yellow

    # Obter blobs no container
    $blobs = Get-AzStorageBlob -Container $container.Name -Context $ctx

    # Filtrar blobs na camada Archive
    $archiveBlobs = $blobs | Where-Object { $_.BlobTier -eq "Archive" }

    Write-Host "üì¶ Encontrados $($archiveBlobs.Count) blobs na camada Archive no container $($container.Name)" -ForegroundColor Cyan

    foreach ($blob in $archiveBlobs) {
        try {
            Write-Host "‚ôªÔ∏è Iniciando reidrata√ß√£o do blob: $($blob.Name)" -ForegroundColor Magenta

            # Executa a reidrata√ß√£o para Hot
            Set-AzStorageBlobTier -Context $ctx `
                                   -Container $container.Name `
                                   -Blob $blob.Name `
                                   -Tier Hot

            Write-Host "‚úÖ Reidrata√ß√£o solicitada com sucesso para: $($blob.Name)" -ForegroundColor Green

            # Adiciona no log
            $log += [PSCustomObject]@{
                Data             = (Get-Date)
                Container        = $container.Name
                Blob             = $blob.Name
                BlobTierAnterior = $blob.BlobTier
                Status           = "Reidrata√ß√£o Solicitada"
            }
        }
        catch {
            Write-Host "‚ùå Erro ao tentar reidratar o blob: $($blob.Name)" -ForegroundColor Red
            Write-Host $_.Exception.Message -ForegroundColor DarkRed

            # Loga erro tamb√©m
            $log += [PSCustomObject]@{
                Data             = (Get-Date)
                Container        = $container.Name
                Blob             = $blob.Name
                BlobTierAnterior = $blob.BlobTier
                Status           = "Erro: $($_.Exception.Message)"
            }
        }
    }
}

# Exporta log para CSV
$log | Export-Csv -Path $logFile -NoTypeInformation -Encoding UTF8

Write-Host "üìë Log salvo em: $logFile" -ForegroundColor Yellow
Write-Host "üöÄ Processo de reidrata√ß√£o conclu√≠do." -ForegroundColor Green
